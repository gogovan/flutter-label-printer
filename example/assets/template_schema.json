{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://gogovan.hk/flutter_label_printer_template.schema.json",
    "title": "Printing Template",
    "description": "A template for printing in flutter_label_printer Flutter plugin.",
    "type": "object",
    "properties": {
        "size": {
            "description": "Set the printing area. Creates a canvas for drawing items to be printed",
            "type": "object",
            "properties": {
                "paperType": {
                    "type": "string",
                    "enum": ["continuous", "label"],
                    "description": "Type of paper. `continuous` for receipt papers. `label` for label papers. Not supported by Hanin TSPL."
                },
                "originX": {
                    "type": "number",
                    "default": 0,
                    "description": "Starting horizontal position of the printing area. Not supported by Hanin TSPL."
                },
                "originY": {
                    "type": "number",
                    "default": 0,
                    "description": "Starting vertical position of the printing area. Not supported by Hanin TSPL."
                },
                "width": {
                    "type": "number",
                    "description": "Width of the printing area."
                },
                "height": {
                    "type": "number",
                    "description": "Height of the printing area."
                }
            },
            "required": ["width", "height"]
        },
        "printer_hints": {
            "description": "Hint parameters used for layout if the printer does not support certain features.",
            "type": "object",
            "properties": {
                "text_align": {
                    "description": "For aligning text on left/right/center. Currently only support single-lined text with monospaced font.",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Enable hinting for aligning text. Use if your printer does not support it.",
                            "type": "boolean"
                        },
                        "charWidth": {
                            "description": "Base width of each character.",
                            "type": "number"
                        }
                    },
                    "required": ["enabled", "charWidth"]
                }
            }
        },
        "commands": {
            "description": "List of commands for printing",
            "type": "array",
            "items": {
                "type": "object",
                "anyOf": [
                    {
                        "description": "Adds text with styling.",
                        "type": "object",
                        "properties": {
                            "command": {
                                "const": "text"
                            },
                            "text": {
                                "type": "string",
                                "description": "The text to print."
                            },
                            "xPosition": {
                                "type": "number",
                                "description": "The x position of the text in the canvas."
                            },
                            "yPosition": {
                                "type": "number",
                                "description": "The y position of the text in the canvas."
                            },
                            "width": {
                                "type": "number",
                                "description": "Width of the text area. Not compatible with style.font."
                            },
                            "height": {
                                "type": "number",
                                "description": "Height of the text area."
                            },
                            "rotation": {
                                "type": "number",
                                "default": 0,
                                "description": "Rotation of the text. Only in 90 degree increments are supported."
                            },
                            "useImage": {
                                "type": "boolean",
                                "description": "Whether to use image to represent this piece of text."
                            },
                            "style": {
                                "description": "The style of the text.",
                                "type": "object",
                                "properties": {
                                    "bold": {
                                        "type": "number",
                                        "default": 0,
                                        "description": "Bold text and degree of boldness."
                                    },
                                    "width": {
                                        "type": "number",
                                        "default": 1,
                                        "description": "Width of each character in text, as a multiplier."
                                    },
                                    "height": {
                                        "type": "number",
                                        "default": 1,
                                        "description": "Height of each character in text, as a multiplier."
                                    },
                                    "align": {
                                        "type": "string",
                                        "enum": ["left", "center", "right"],
                                        "description": "Alignment of text. Either left, center or right. Should be used in conjunction with width (not style.width)."
                                    },
                                    "font": {
                                        "type": "string",
                                        "enum": ["small", "medium", "large", "vlarge", "vvlarge", "chinese", "chineseLarge", "ocrSmall", "ocrLarge", "square", "triumvirate"],
                                        "description": "Font of text."
                                    }
                                }
                            }
                        },
                        "required": ["text", "xPosition", "yPosition"]
                    },
                    {
                        "description": "Adds a barcode.",
                        "type": "object",
                        "properties": {
                            "command": {
                                "const": "barcode"
                            },
                            "type": {
                                "type": "string",
                                "enum": ["codabar", "code39", "code93", "code128", "code128m", "ean8", "ean13", "ean128", "msi", "itf14", "upca", "upce"],
                                "description": "The barcode symbology of the barcode.\nHanin CPCL: upca, upce, ean13, ean8, code39, code93, code128, codabar.\nHanin TSPL: code128, code128m, ean128, code39, code93, upca, msi, itf14, ean13"
                            },
                            "xPosition": {
                                "type": "number",
                                "description": "The x position of the barcode in the canvas."
                            },
                            "yPosition": {
                                "type": "number",
                                "description": "The y position of the barcode in the canvas."
                            },
                            "data": {
                                "type": "string",
                                "description": "Data encoded in the barcode."
                            },
                            "height": {
                                "type": "number",
                                "description": "The height of the barcode."
                            },
                            "barLineWidth": {
                                "type": "number",
                                "description": "The width of each narrow bar of the barcode."
                            }
                        },
                        "required": ["type", "xPosition", "yPosition", "data", "height"]
                    },
                    {
                        "description": "Adds a QR Code",
                        "type": "object",
                        "properties": {
                            "command": {
                                "const": "qrcode"
                            },
                            "xPosition": {
                                "type": "number",
                                "description": "The x position of the barcode in the canvas."
                            },
                            "yPosition": {
                                "type": "number",
                                "description": "The y position of the barcode in the canvas."
                            },
                            "data": {
                                "type": "string",
                                "description": "Data encoded in the barcode."
                            },
                            "unitSize": {
                                "type": "number",
                                "description": "The size of each unit (square) of the QR Code."
                            }
                        },
                        "required": ["xPosition", "yPosition", "data", "unitSize"]
                    },
                    {
                        "description": "Draws a line.",
                        "type": "object",
                        "properties": {
                            "command": {
                                "const": "line"
                            },
                            "left": {
                                "type": "number"
                            },
                            "top": {
                                "type": "number"
                            },
                            "right": {
                                "type": "number"
                            },
                            "bottom": {
                                "type": "number"
                            },
                            "strokeWidth": {
                                "type": "number",
                                "default": 0
                            }
                        },
                        "required": ["left", "top", "right", "bottom"]
                    },
                    {
                        "description": "Draws a rectangle.",
                        "type": "object",
                        "properties": {
                            "command": {
                                "const": "rectangle"
                            },
                            "left": {
                                "type": "number"
                            },
                            "top": {
                                "type": "number"
                            },
                            "right": {
                                "type": "number"
                            },
                            "bottom": {
                                "type": "number"
                            },
                            "strokeWidth": {
                                "type": "number",
                                "default": 0
                            }
                        },
                        "required": ["left", "top", "right", "bottom"]
                    },
                    {
                        "description": "Adds an image.",
                        "type": "object",
                        "properties": {
                            "command": {
                                "const": "rectangle"
                            },
                            "path": {
                                "type": "string",
                                "description": " The file path to the image."
                            },
                            "xPosition": {
                                "type": "number",
                                "description": "The x position of the image in the canvas."
                            },
                            "yPosition": {
                                "type": "number",
                                "description": "The y position of the image in the canvas."
                            }
                        },
                        "required": ["path", "xPosition", "yPosition"]
                    }
                ]
            }
        }
    },
    "required": ["size", "commands"]
}